Test setup:

    >>> from plone.testing import z2
    >>> with z2.zopeApp() as app:
    ...     pass

L'url de l'application instanciée pour ce test est contenu dans ``calendarUrl``

    >>> calendarUrl
    'http://localhost:55001/calendar'

Grace à cet url, nous pouvons envoyer des requêtes SOAP vers l'application.
Nous instancions alors un client::

    >>> from gites.walhebcalendar.client import CalendarClient
    >>> client = CalendarClient(calendarUrl)

Simple annulation de réservation
--------------------------------

Pour pouvoir annuler il faut bien sûr que le système contienne des réservations. Nous en ajoutons donc::

    >>> from datetime import date
    >>> startDate = date(2012, 1, 1)
    >>> endDate = date(2012, 1, 4)
    >>> notificationId = client.addBooking('AAAA1234', startDate, endDate)

Il existe donc bien une réservation

    >>> bookings = client.getBookings(startDate, endDate)
    >>> len(bookings)
    1

Pour annuler cette réservation et rendre l'hébergement disponible aux mêmes dates il suffit d'appeler la méthode `cancelBooking`::

    >>> notificationId = client.cancelBooking('AAAA1234', startDate, endDate)

Notification est bien 2 car c'est la seconde notification enregistrée dans le système. Il n'y a donc plus de réservation dans le système::

    >>> bookings = client.getBookings(startDate, endDate)
    >>> len(bookings)
    0

Annulation d'un sous ensemble d'une réservation
-----------------------------------------------

Le système permet aussi d'annuler un sous ensemble d'une réservation enregistrer. Prennons par exemple une réservation entre le 01/01/2012 et le 04/01/2012::

    >>> from datetime import date
    >>> startDate = date(2012, 1, 1)
    >>> endDate = date(2012, 1, 4)
    >>> client.addBooking('AAAA1234', startDate, endDate)
    3

Nous allons annuler uniquement la réservation entre le 02/01/2012 et le 04/01/2012::

    >>> notificationId = client.cancelBooking('AAAA1234', date(2012, 1, 2), date(2012, 1, 4))

Nous avons toujours bien une réservation enregistrée::

    >>> bookings = client.getBookings(startDate, endDate)
    >>> len(bookings)
    1

Mais celle ci ne s'étant que du 01/01/2012 au 01/01/2012::

    >>> from pprint import pprint
    >>> pprint(bookings[0].__dict__)
    {'_bookingType': 'booked',
     '_cgtId': 'AAAA1234',
     '_endDate': datetime.date(2012, 1, 1),
     '_startDate': datetime.date(2012, 1, 1)}

Gestion d'erreurs
-----------------

L'application empêche toute annulation de réservation dans le passé::

    >>> client.cancelBooking('AAAA1234', date(1980, 1, 2), date(1980, 1, 4))
    Traceback (most recent call last):
    ...
    FaultException: Booking date in the past
    ...

L'application empêche que la date de début de réservation soit supérieur à la date
de fin de réservation

    >>> client.cancelBooking('AAAA1234', date(2012, 1, 4), date(2012, 1, 2))
    Traceback (most recent call last):
    ...
    FaultException: Start date is after end date
    ...

L'application empêche la suppression d'une réservation pour un numéro d'hébergement ne correspondant pas au format suivant: `[A-Z]{4}[0-9]{4}`

    >>> client.cancelBooking('23', date(2012, 1, 2), date(2012, 1, 4))
    Traceback (most recent call last):
    ...
    FaultException: Wrong CGT Id format. Must match [A-Z]{4}[0-9]{4}
    ...
